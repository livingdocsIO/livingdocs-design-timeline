@mixin timeline($timeline-color) {
  $timeline-width: 3px;
  // The width of the time dash/mark
  $time-width: $timeline-width;
  $time-length: rhythm(1/2);
  @include apply-side-rhythm-border(left, $timeline-width);
  border-color: $timeline-color;

  // Define the tick or dash of the timeline
  position: relative;
  &:before {
    border-top: $time-width solid $timeline-color;
    width: $time-length;
    display: block;
    content: '';
    position: absolute;
    left: - $time-length;
    @include breakpoint($medium-screens-or-smaller) {
      left: - $timeline-width / 2;
    }
    top: rhythm() / 2;
  }
}

@mixin timeline-bullets($bullet-color, $bullet-color-light) {
  $bullet-size: 9px;
  $bullet-border-width: 4px;
  $bullet-radius: $bullet-size / 2  + $bullet-border-width;
  $timeline-width: 3px;

  border-color: $bullet-color-light;
  font-family: $font-sans-serif;

  @include apply-side-rhythm-border(left, $timeline-width);

  &:before {
    border: $bullet-border-width solid $bullet-color-light;
    background-color: $bullet-color;
    border-radius: $bullet-radius;
    width: $bullet-size;
    height: $bullet-size;
    left: - $bullet-radius - $timeline-width / 2;
    top: $base-line-height / 2 - $bullet-radius + 1px;
  }
}

.event {
  $timeline-color: #ddd;
  $font-size-adjust-to: 0.9rem;

  @include container();
  @include trailer();
  + .event {
    @include leader(-1);
  }
  clear: both;

  @include breakpoint($medium-screens-or-smaller) {
    @include timeline($timeline-color);
  }

  main {
    @include adjust-font-size-to($font-size-adjust-to);
    padding-top: (1rem - $font-size-adjust-to);

    @include breakpoint($medium-screens-or-smaller) {
      @include span(5);
    }
    @include breakpoint($large-screen) {
      @include span(4 at 2);
      @include timeline($timeline-color);
    }

    p {
      @include squish(0);
      @include rhythm($leader: 0, $trailer: 0);
      text-indent: rhythm(1);

      &:first-child {
        text-indent: 0;
      }
      &:last-child {
        @include trailer(1);
      }
    }

  }

  aside.time {
    @include breakpoint($medium-screens-or-smaller) {
      p {
        display: inline;
      }
      time {
        margin-right: gutter() / 4;
      }
    }

    @include breakpoint($large-screen) {
      @include span(1);
      text-align: right;

      time {
        display: block;
      }
    }

    display: block;
    font-family: $font-sans-serif;
    color: lighten($font-color, 40%);

    time {
      font-weight: 900;
      @include adjust-font-size-to(1.2rem, 1);
    }

    p {
      @include squish(0);
      @include rhythm(0);
      @include adjust-font-size-to($font-size-adjust-to);
    }
  }

  &.bullets {
    $bullet-color: #559ec1;
    $bullet-color-light: lighten($bullet-color, 10%);

    aside.time {
      time {
        color: $bullet-color;
      }
      p {
        color: $bullet-color-light;
      }
    }

    p {
      @include adjust-font-size-to($font-size-adjust-to);
    }

    @include breakpoint($medium-screens-or-smaller) {
      @include timeline-bullets($bullet-color, $bullet-color-light);
    }

    @include breakpoint($large-screen) {
      main {
        @include timeline-bullets($bullet-color, $bullet-color-light);
      }
    }
  }
}